
git remote //status
git remote add [git hub repository name] [url]
git remote -v  //verbose status
git remote push [git hub repository name] [branch to be pushed]

I added this note on github

When would you want to use a remote repository rather than keeping all your work local?
Keeping work remotely is a good security process. (I am speaking from experience of hardware failure!) It allows sharing of information on an easy basis and access to the files on multiple machines.

git pull origin master

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
The manual control allows you to manage changes and I can see how this would help especially in co-operative projects, I am not certain however how git manages multiple changes to the same branch as this could introduce a similar problem as seen in the merge cpmmand.

forking of github repositories

Describe the differences between forks, clones, and branches. When would you use one instead of another?
A fork is the name for duplicating another person's commit history so that you can collaborate or develop their work, The affect is to place a copy of their repository into your repository in github. As it is a copy your changes do not affect their work, although they are credited and you can suggest changes.
To clone a repository provides you with a similar copy, although this is established locally and not with your github repsitories.
Branches are similar to both in that they provide a way to establish multiple versions of your code. These are kept locally until you decide to push particular branches to a github repository. A branches that you do not wish to publish can be kept locally therby limiting access.
The key point about use, in my view, is the degree of access and co-operation required. Local branches can be kept to yourself and those with local access. Forks and clones are co-operative method allowing access to work without disturbing the initial code.

git pull origin master
(equivalent to git fetch origin master THEN git merge master origin/master)

Fast Forward Merges

What is the benefit of having a copy of the last known state of the remote stored locally?
This information allows confirmation of whether the local is ahead of the repository to be shown in git status. If offline it allows some information to be shown and is a good reminder of the need to push information to github.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
There are many methods on collaboration, An obviuos one would to keep separate working and development copies of your code and to make the development version available to the collaborators. This could be achieved in many ways, git hub could be viewed as restrictive. Any requirement for tracking of changes, investigating differences or nerging of multiple versions would need to be manually managed and would, therefore, add substantial overheads to the process.

